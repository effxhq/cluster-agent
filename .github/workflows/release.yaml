name: Release

on:
  push:
    tags:
      - v*

jobs:
  container:
    name: Publish Container
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry
        run: echo "${REGISTRY_PASSWORD}" | docker login -u "${REGISTRY_USERNAME}" --password-stdin ${REGISTRY_HOST}
        env:
          REGISTRY_USERNAME: ${{ secrets.GHCR_REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.GHCR_REGISTRY_PUSH_PASSWORD }}
          REGISTRY_HOST: ghcr.io

      - name: Build Container Image
        env:
          REGISTRY_HOST: ghcr.io
        # todo: re-enable linux/arm64
        run: |
          docker buildx build . \
            --platform linux/amd64 \
            --tag ${REGISTRY_HOST}/effxhq/cluster-agent:latest \
            --tag ${REGISTRY_HOST}/effxhq/cluster-agent:${GITHUB_REF##*/v} \
            -f Dockerfile \
            --push

  chart:
    name: Publish Chart
    runs-on: ubuntu-latest

    needs:
      - container

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: oleksiyrudenko/gha-git-credentials@v2.1
        with:
          global: true
          name: 'effxbot'
          email: 'mya+bot@effx.com'
          actor: 'effxbot'
          token: ${{ secrets.CHART_RELEASER_TOKEN }}

      - name: Prepare
        run: |
          git remote add charts https://github.com/effxhq/charts.git
          git fetch --all

          mkdir .cr-index/
          mkdir .cr-release-packages/

          sudo apt-get install wget

      - name: Install yq
        env:
          VERSION: 4.9.7
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v${VERSION}/yq_linux_amd64 -O ./yq
          chmod +x ./yq
          sudo mv ./yq /usr/bin/yq

      - name: Install chart-releaser
        env:
          VERSION: 1.2.1
        run: |
          wget https://github.com/helm/chart-releaser/releases/download/v${VERSION}/chart-releaser_${VERSION}_linux_amd64.tar.gz -O cr.tgz
          tar zxf cr.tgz cr && rm cr.tgz
          sudo mv ./cr /usr/bin/cr

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.1

      - name: Set Versions
        shell: bash
        run: |
          export VERSION="\"${GITHUB_REF##*/v}\""
          yq e ".version = ${VERSION}" -i ./deploy/cluster-agent/Chart.yaml
          yq e ".appVersion = ${VERSION}" -i ./deploy/cluster-agent/Chart.yaml

      # TODO: Setup GPG signing
      # - name: Prepare GPG key
      #   run: |
      #     gpg_dir=.cr-gpg
      #     mkdir "$gpg_dir"

      #     keyring="$gpg_dir/secring.gpg"
      #     base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"

      #     passphrase_file="$gpg_dir/passphrase"
      #     echo "$GPG_PASSPHRASE" > "$passphrase_file"

      #     echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
      #     echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
      #   env:
      #     GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
      #     GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      # - name: Add dependency chart repos
      #   run: |
      #     helm repo add bitnami https://charts.bitnami.com/bitnami

      # package and upload manually since
      - name: Package
        run: |
          cr package deploy/cluster-agent

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          files: |
            .cr-release-packages/*
        env:
          GITHUB_TOKEN: ${{ secrets.CHART_RELEASER_TOKEN }}

      - name: Index
        run: |
          git config --unset --local http.https://github.com/.extraheader
          cr index --push
        env:
          CR_TOKEN: "${{ secrets.CHART_RELEASER_TOKEN }}"
